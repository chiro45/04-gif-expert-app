{"version":3,"sources":["Componentes/AddCategory.js","helpers/getGifs.js","Componentes/GifGridItem.js","Componentes/GifGrid.js","hooks/useFetchGifs.js","Componentes/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFethGifs","animate__animated","animate__backInRight","GifExpertApp","propTypes","PropTypes","func","isRequired","ReactDOM","render","document","getElementById"],"mappings":"0MAEe,SAASA,EAAT,GAAuC,IAAjBC,EAAgB,EAAhBA,cAEjC,EAAoCC,mBAAS,gBAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OAGI,sBAAMC,SAdW,SAACC,GAClBA,EAAEC,eAAeD,GAEdH,EAAWK,OAAOC,OAAS,IAE7BR,GAAe,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC7CN,EAAc,MAQf,SACA,uBACAO,KAAK,OACLC,MAAOT,EACPU,SAtBsB,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,Y,mDCJxBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACPC,EADO,iDAC0CC,UAAWH,GADrD,+DAEWI,MAAMF,GAFjB,cAEPG,EAFO,gBAGQA,EAAUC,OAHlB,uBAGNC,EAHM,EAGNA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXF,IAAG,UAAEA,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAR7B,kBAYNM,GAZM,4CAAH,sDAcCT,ICfFgB,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOF,EAAS,EAATA,IAEpC,OAEI,sBAAKM,UAAU,8CAAf,UACI,qBAAKC,IAAKP,EAAKQ,IAAKN,IACpB,4BAAIA,QCJHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SACrB,ECDuB,SAAEA,GACzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OAXCC,qBAAU,WAEHxB,EAAQC,GACPwB,MAAK,SAAAC,GAAOH,EAAS,CAClBf,KAAMkB,EACNL,SAAS,SAIlB,CAACpB,IAEGqB,EDhBwBK,CAAY1B,GAA/Ba,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QACpB,OACI,qCACA,oBAAIO,mBAAiB,EAACC,sBAAoB,EAA1C,SAA4C5B,IAC3CoB,GAAW,mBAAGJ,UAAU,iDAAb,wBACZ,qBAAKA,UAAU,mDAAf,SAEYH,EAAOJ,KAAK,SAAAC,GAAG,OACZ,cAAC,EAAD,eAEIA,GADCA,EAAIC,aERnBkB,EAAe,WAExB,MAAoC3C,mBAAU,CAAC,aAA/C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAMA,OACI,qCACA,8CACA,cAACD,EAAD,CAAaC,cAAgBA,IAC7B,uBACA,6BAIAS,EAAWe,KAAI,SAAAT,GAAQ,OACR,cAAE,EAAF,CAEAA,SAAUA,GADLA,YAa5BhB,EAAY8C,UAAY,CACpB7C,cAAe8C,IAAUC,KAAKC,Y,MCjClCC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.b5cbdb38.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\n\r\nexport default function AddCategory({setCategories}) {\r\n    \r\n    const [inputValue, setinputValue] = useState(\"Busca tu gif\");\r\n    const handleInputChange = (e)=>{\r\n\r\n        setinputValue(e.target.value)\r\n    }\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault(e)\r\n\r\n        if(inputValue.trim().length > 2){\r\n            \r\n         setCategories( categories => [inputValue, ...categories,])\r\n         setinputValue('')\r\n\r\n        }\r\n        //console.log('submit hecho')\r\n    }\r\n    return (\r\n        \r\n        \r\n        <form onSubmit={handleSubmit}>\r\n        <input\r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n        />\r\n        </form>\r\n        \r\n    )\r\n}\r\n","\r\n\r\n\r\n const getGifs = async(category)=>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=12&api_key=0p5QcgB8WR8jiCntwt0Dd4vibpEqZPGz`\r\n    const respuesta = await fetch(url);\r\n    const {data} = await respuesta.json();\r\n    const gifs = data.map(img =>{\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            img: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n  \r\n    return gifs;\r\n}\r\nexport default getGifs;","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, img}) => {\r\n    \r\n    return (\r\n        \r\n        <div className='card animate__animated animate__backInRight'>\r\n            <img src={img} alt={title}></img>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFethGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n    const {data:images, loading} = useFethGifs(category);\r\n    return (\r\n        <>\r\n        <h3 animate__animated animate__backInRight>{category}</h3>\r\n        {loading && <p className='loading animate__animated animate__backInLeft '>Loading...</p>}\r\n        <div className='card-grid animate__animated animate__backInRight'>   \r\n                {\r\n                    images.map( img =>(\r\n                       <GifGridItem\r\n                       key={img.id}\r\n                       {...img}\r\n                       />\r\n                    ))\r\n                }\r\n        </div> \r\n        </>\r\n    )\r\n}\r\n","\r\nimport {useState, useEffect} from 'react';\r\nimport getGifs from '../helpers/getGifs'\r\n\r\nexport const useFethGifs = ( category )=>{\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true,\r\n\r\n    });\r\n     useEffect(()=>{\r\n        \r\n            getGifs(category)\r\n            .then(imgs=>{setState({\r\n                data: imgs,\r\n                loading: false,\r\n            });\r\n        })\r\n       \r\n     },[category])\r\n\r\n    return state; // {data, loading}\r\n}","import React, {useState} from 'react';\r\nimport AddCategory from './AddCategory';\r\nimport PropTypes from 'prop-types';\r\nimport { GifGrid } from './GifGrid';\r\n\r\n\r\nexport const GifExpertApp = () =>{\r\n    \r\n    const [categories, setCategories] = useState( ['Avengers']);\r\n    // const handleAdd = ()=>{\r\n    //    setcategories([...categories, \"juan CArlo\"])\r\n    // }\r\n    \r\n    // const categories = ['one punch', 'samurai X', 'dragon Ball'];\r\n    return ( \r\n        <>\r\n        <h2>GifExpertApp</h2>\r\n        <AddCategory setCategories ={setCategories}/>\r\n        <hr/>\r\n        <ol>\r\n\r\n        {\r\n\r\n        categories.map(category => (\r\n                       < GifGrid \r\n                       key={category}\r\n                       category={category}/>\r\n                    )\r\n        \r\n        )}\r\n\r\n        </ol>\r\n        \r\n        </>\r\n     );\r\n\r\n    \r\n}\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './Componentes/GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}